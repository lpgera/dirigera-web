name: Create and publish a Docker image

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate version
        run: echo "VERSION=$(date +'v%Y-%m-%d').$GITHUB_RUN_NUMBER" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # TODO apply filtering by branch ,enable=${{ github.ref == 'refs/heads/master' }}
          tags: |
            type=ref,event=branch
            type=raw,value=${{ env.VERSION }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            VERSION=${{ env.VERSION }}
          push: ${{ !startsWith(github.ref, 'refs/heads/dependabot/') }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        # TODO if: github.ref == 'refs/heads/master'
        with:
          prerelease: true
          tag: ${{ env.VERSION }}
          commit: ${{ github.sha }}
          body: |
            You can grab this specific image from here: `ghcr.io/${{ github.repository }}:${{ env.VERSION }}`
            To always get the most up-to-date version, use `ghcr.io/${{ github.repository }}:latest`
